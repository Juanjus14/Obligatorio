// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obligatorio.LogicaAccesoDatos.RepositorioEntityFramework;

namespace Obligatorio.LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    [Migration("20221003210819_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoISO_Alfa3")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImagenURL")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PBI")
                        .HasColumnType("float");

                    b.Property<int>("Poblacion")
                        .HasColumnType("int");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CodigoISO_Alfa3");

                    b.HasIndex("ImagenURL");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hora")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Seleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadApostadores")
                        .HasColumnType("int");

                    b.Property<string>("ContactoNombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Grupo")
                        .HasColumnType("int");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactoNombre");

                    b.HasIndex("PaisId");

                    b.ToTable("Selecciones");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.ValueObjects.CodigoPais", b =>
                {
                    b.Property<string>("CodigoISO_Alfa3")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CodigoISO_Alfa3");

                    b.ToTable("CodigoPais");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.ValueObjects.ImagenPais", b =>
                {
                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("URL");

                    b.ToTable("ImagenPais");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.ValueObjects.InfoSeleccionPartido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amarillas")
                        .HasColumnType("int");

                    b.Property<int>("Goles")
                        .HasColumnType("int");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("RojasAcumuladas")
                        .HasColumnType("int");

                    b.Property<int>("RojasDirectas")
                        .HasColumnType("int");

                    b.Property<int?>("SeleccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.HasIndex("SeleccionId");

                    b.ToTable("InfoSeleccionPartido");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.ValueObjects.PersonaContacto", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nombre");

                    b.ToTable("PersonaContacto");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Pais", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.ValueObjects.CodigoPais", "Codigo")
                        .WithMany()
                        .HasForeignKey("CodigoISO_Alfa3");

                    b.HasOne("Obligatorio.LogicaNegocio.ValueObjects.ImagenPais", "Imagen")
                        .WithMany()
                        .HasForeignKey("ImagenURL");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Seleccion", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.ValueObjects.PersonaContacto", "Contacto")
                        .WithMany()
                        .HasForeignKey("ContactoNombre");

                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.ValueObjects.InfoSeleccionPartido", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Partido", "Partido")
                        .WithMany("Infoselpar")
                        .HasForeignKey("PartidoId");

                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Seleccion", "Seleccion")
                        .WithMany()
                        .HasForeignKey("SeleccionId");
                });
#pragma warning restore 612, 618
        }
    }
}
